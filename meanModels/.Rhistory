data = ti.mg, family = Gamma())
summary(mod)
mod <- glmmTMB(res ~ treatment*dpi + (1|band_number),
data = ti.mg, family = Gamma())
mod <- glmmTMB(res ~ temp*dpi + (1|band_number),
data = ti.mg, family = Gamma())
summary(mod)
mod <- glmmTMB(res ~ temp*treatment*dpi,
data = ti.mg, family = Gamma())
table(ti.f$temp, ti.f$treatment, ti.f$dpi)
mod <- glmer(res ~ temp*treatment*dpi,
data = ti.mg, family = Gamma())
mod <- glmer(res ~ temp*treatment*dpi + (1|band_number),
data = ti.mg, family = Gamma())
mod <- glm(res ~ temp*treatment*dpi,
data = ti.mg, family = Gamma())
mod <- glmmTMB(res ~ temp*treatment*dpi + (1|band_number),
data = ti.f, family = Gamma())
summary(mod)
hist(residuals(mod))
plot(residuals(mod), predict(mod))
car::Anova(mod, type = "III")
modstep <- stepAIC(mod)
mod <- glmmTMB(res ~ temp+treatment+dpi +
temp:treatment + temp:dpi +
treatment:dpi + (1|band_number),
data = ti.f, family = Gamma())
car::Anova(mod, type = "III")
warnings()
mod <- glmmTMB(res ~ temp*treatment*dpi,
data = ti.f, family = Gamma())
warnings()
mod <- glm(res ~ temp*treatment*dpi,
data = ti.f, family = Gamma())
summary(mod)
car::Anova(mod, type = "III")
mod <- glmer(res ~ temp*treatment*dpi + (1|band_number),
data = ti.f, family = Gamma())
library(readxl)
library(emmeans)
library(car)
library(MASS)
returns <- read.csv("KristenT_LogisticRegression.csv")
str(returns)
levels(as.factor(returns$origin.geography..R.U.S.)) #Some without level
levels(as.factor(returns$outcome.geography..R.U.S.)) #Some without level
levels(as.factor(returns$Intake.shelter.geography))
table(returns$outcome.geography..R.U.S.)
returns$origin.geography..R.U.S. <- ifelse(returns$origin.geography..R.U.S. == "", NA,
returns$origin.geography..R.U.S.)
returns$outcome.geography..R.U.S. <- ifelse(returns$outcome.geography..R.U.S. == "", NA,
returns$outcome.geography..R.U.S.)
levels(as.factor(returns$origin.geography..R.U.S.)) #Some without level
levels(as.factor(returns$outcome.geography..R.U.S.)) #Some without level
levels(as.factor(returns$Intake.shelter.geography))
table(returns$origin.geography..R.U.S.)
table(returns$outcome.geography..R.U.S.)
no.na.returns <- na.omit(returns[c("Age.in.Months.New", "sex", "Breed.Grouping",
"TransportYN", "Any.Aggression.", "Length.of.Stay..days.",
"origin.geography..R.U.S.", "Intake.shelter.geography",
"outcome.geography..R.U.S.", "Return.Y.N")])
logReg <- glm(Return.Y.N ~ Age.in.Months.New + sex + Breed.Grouping +
TransportYN + Any.Aggression. + Length.of.Stay..days.+
origin.geography..R.U.S.*Intake.shelter.geography+
origin.geography..R.U.S.*outcome.geography..R.U.S. +
Intake.shelter.geography*outcome.geography..R.U.S.,
data = no.na.returns, family = binomial())
summary(logReg)
car::Anova(logReg)
car::vif(logReg, type = "terms") #Not much of a problem here
n <- nrow(returns)
stepMod <- stepAIC(logReg, direction = "both")
car::Anova(stepMod)
car::vif(stepMod, type = "terms") #Definitely no problem after stepwise regression!
########### Final Model from JMP to get results ###############
#
# In order to get estimated marginal means and to do pairwise comparisons more
#     easily, I re-created the model from JMP in R. I compared the outputs to
#     make sure they were the same and they are when you set the default levels
#     for comparison to be the same, so it should not be a problem to use R
#     for finding emmeans. I will send the client separate JMP files with the
#     resulting emmeans from R.
#
library(multcomp)
library(DHARMa)
returns$age.sq <- returns$Age.in.Months.New**2
returns$Breed.Grouping <- as.factor(returns$Breed.Grouping)
returns$Any.Aggression. <- as.factor(returns$Any.Aggression.)
returns$outcome.geography..R.U.S. <- as.factor(returns$outcome.geography..R.U.S.)
returns <- returns %>% mutate(intake_type2 =
ifelse(intake_type == "BRN N CARE"|
intake_type == "STRAY", "OTHER", intake_type))
returns <- read.csv("KristenT_LogisticRegression.csv")
setwd("~/SAIG/KristenThanawala")
returns <- read.csv("KristenT_LogisticRegression.csv")
str(returns)
levels(as.factor(returns$origin.geography..R.U.S.)) #Some without level
levels(as.factor(returns$outcome.geography..R.U.S.)) #Some without level
levels(as.factor(returns$Intake.shelter.geography))
table(returns$origin.geography..R.U.S.)
table(returns$outcome.geography..R.U.S.)
returns$origin.geography..R.U.S. <- ifelse(returns$origin.geography..R.U.S. == "", NA,
returns$origin.geography..R.U.S.)
returns$outcome.geography..R.U.S. <- ifelse(returns$outcome.geography..R.U.S. == "", NA,
returns$outcome.geography..R.U.S.)
levels(as.factor(returns$origin.geography..R.U.S.)) #Some without level
levels(as.factor(returns$outcome.geography..R.U.S.)) #Some without level
levels(as.factor(returns$Intake.shelter.geography))
table(returns$origin.geography..R.U.S.)
table(returns$outcome.geography..R.U.S.)
no.na.returns <- na.omit(returns[c("Age.in.Months.New", "sex", "Breed.Grouping",
"TransportYN", "Any.Aggression.", "Length.of.Stay..days.",
"origin.geography..R.U.S.", "Intake.shelter.geography",
"outcome.geography..R.U.S.", "Return.Y.N")])
logReg <- glm(Return.Y.N ~ Age.in.Months.New + sex + Breed.Grouping +
TransportYN + Any.Aggression. + Length.of.Stay..days.+
origin.geography..R.U.S.*Intake.shelter.geography+
origin.geography..R.U.S.*outcome.geography..R.U.S. +
Intake.shelter.geography*outcome.geography..R.U.S.,
data = no.na.returns, family = binomial())
summary(logReg)
car::Anova(logReg)
car::vif(logReg, type = "terms") #Not much of a problem here
n <- nrow(returns)
stepMod <- stepAIC(logReg, direction = "both")
car::Anova(stepMod)
car::vif(stepMod, type = "terms") #Definitely no problem after stepwise regression!
########### Final Model from JMP to get results ###############
#
# In order to get estimated marginal means and to do pairwise comparisons more
#     easily, I re-created the model from JMP in R. I compared the outputs to
#     make sure they were the same and they are when you set the default levels
#     for comparison to be the same, so it should not be a problem to use R
#     for finding emmeans. I will send the client separate JMP files with the
#     resulting emmeans from R.
#
library(multcomp)
library(DHARMa)
returns$age.sq <- returns$Age.in.Months.New**2
returns$Breed.Grouping <- as.factor(returns$Breed.Grouping)
returns$Any.Aggression. <- as.factor(returns$Any.Aggression.)
returns$outcome.geography..R.U.S. <- as.factor(returns$outcome.geography..R.U.S.)
returns <- returns %>% mutate(intake_type2 =
ifelse(intake_type == "BRN N CARE"|
intake_type == "STRAY", "OTHER", intake_type))
jmpReg <- glm(Return.Y.N ~ Age.in.Months.New + age.sq + Breed.Grouping +
Any.Aggression. + Length.of.Stay..days.+
outcome.geography..R.U.S. + intake_type2,
data = returns, family = binomial())
car::Anova(jmpReg)
summary(jmpReg)
simulateResiduals(jmpReg, plot = T)
# Make outputs for categorical predictors
str(returns)
breed <- data.frame(cld(emmeans(jmpReg, pairwise ~ Breed.Grouping, type = "response",
adjust = "tukey")))
agg <- data.frame(cld(emmeans(jmpReg, pairwise ~Any.Aggression., type = "response",
adjust = "tukey")))
outgeo <- data.frame(cld(emmeans(jmpReg, pairwise ~outcome.geography..R.U.S., type = "response",
adjust = "tukey")))
inttype <- data.frame(cld(emmeans(jmpReg, pairwise ~intake_type2, type = "response",
adjust = "tukey")))
write.csv(inttype, "inttype.csv")
inttype
emmeans(jmpReg, pairwise ~intake_type2, type = "response",
adjust = "tukey")
setwd("~/SAIG/LexieSeligman")
library(tidyverse)
library(readxl)
data <- read_excel("LexieResults.xlsx", sheet = "allInt")
str(data)
ggplot(data, aes(x = Day, y = Estimate, color = Treatment,
linetype = Treatment))+
geom_line(aes(group = Treatment), size = 0.8)+
geom_errorbar(aes(ymin = Estimate-SE,
ymax = Estimate+SE),
width = 1)+
geom_point()+
theme_bw()+
facet_wrap(~Response, scale = "free")+
labs(y = "Estimated Marginal Mean")
trtday <- data %>% filter(SigType == "trtday")
int <- data %>% filter(SigType == "int")
day <- data %>% filter(SigType == "day")
trt <- data %>% filter(SigType == "trt")
noeff <- data %>% filter(SigType == "none")
ggplot(data = noeff, aes(x = Day, y = Estimate, color = Treatment,
linetype = Treatment))+
geom_line(aes(group = Treatment), size = 0.8)+
geom_errorbar(aes(ymin = Estimate-SE,
ymax = Estimate+SE),
width = 1, size = 0.8)+
geom_point(size = 2.5)+
theme_bw()+
facet_wrap(~Response, scale = "free")+
labs(y = "Estimated Marginal Mean",
title = "Responses with No Significant Effect")
ggplot(data = day, aes(x = Day, y = Estimate, color = Treatment,
linetype = Treatment))+
geom_line(aes(group = Treatment), size = 0.8)+
geom_errorbar(aes(ymin = Estimate-SE,
ymax = Estimate+SE),
width = 1, size = 0.8)+
geom_point(size = 2.5)+
theme_bw()+
facet_wrap(~Response, scale = "free")+
labs(y = "Estimated Marginal Mean",
title = "Responses with Significant Day")
library(emmeans)
library(multcomp)
library(ggplot2)
library(tidyverse)
library(lme4)
library(glmmTMB)
library(effects)
#library(AICcmodavg)
library(DHARMa)
library(optimx)
source("dataCleaning_antibody.R")
unique(ti.pi$dpi)
ti.pi$dpi <- as.factor(ti.pi$dpi)
ti.pi$band_number <- as.factor(ti.pi$band_number)
# Simplify data set so pivot_wider works
ti.pi <- ti.pi %>% select(dpi, band_number, treatment, temp,
sex, elisa_od)
wibird <- ti.pi %>% pivot_wider(names_from = dpi,
names_glue = "{.value}_{dpi}",
values_from = elisa_od)
wibird <- wibird %>% mutate(elisa_diff = abs(elisa_od_9 - elisa_od_28))
library(CValternatives)
pvs <- c()
for (i in 1:nrow(wibird)){
vec <- c(wibird$elisa_od_9[i], wibird$elisa_od_28[i])
pvs[i] <- PV(vec)
}
wibird$pv <- pvs
ggplot(wibird, aes(x = treatment, y = pv))+
geom_point()+
facet_wrap(~temp)
ggplot(wibird, aes(x = treatment, y = elisa_diff))+
geom_point()+
facet_wrap(~temp)
ggplot(wibird, aes(x = treatment, y = pv))+
geom_point()+
facet_wrap(~temp)
wibird$pv_plus <- wibird$pv + 0.0001
mod <- glm(pv_plus ~ temp*treatment, data = wibird,
family = Gamma())
summary(mod)
simulateResiduals(mod, plot = T) #Assumptions check out
car::Anova(mod, type = "III")
medelisa  <- median(ti.pi$elisa_od, na.rm = T)
meandelisa  <- mean(ti.pi$elisa_od, na.rm = T)
ggplot(data = ti.pi, aes(x = dpi, y = elisa_od))+
geom_jitter(width = 0.1, aes(color = temp))+
geom_hline(yintercept = medelisa)+
geom_hline(yintercept = meanelisa, color = "green")+
facet_wrap(~treatment)
meandelisa  <- mean(ti.pi$elisa_od, na.rm = T)
ggplot(data = ti.pi, aes(x = dpi, y = elisa_od))+
geom_jitter(width = 0.1, aes(color = temp))+
geom_hline(yintercept = medelisa)+
geom_hline(yintercept = meanelisa, color = "green")+
facet_wrap(~treatment)
meanelisa  <- mean(ti.pi$elisa_od, na.rm = T)
ggplot(data = ti.pi, aes(x = dpi, y = elisa_od))+
geom_jitter(width = 0.1, aes(color = temp))+
geom_hline(yintercept = medelisa)+
geom_hline(yintercept = meanelisa, color = "green")+
facet_wrap(~treatment)
ti.pi$res <- abs(ti.pi$elisa_od - medelisa)
mod <- glmmTMB(res ~ temp*treatment*dpi,
data = ti.pi,
family = Gamma())
summary(mod)
hist(residuals(mod))
plot(residuals(mod), predict(mod))
simulateResiduals(mod)
simulateResiduals(mod, plot = T)
car::Anova(mod, type = "III")
modstep <- stepAIC(mod)
car::Anova(modstep, type = "III")
emmeans(modstep, pairwise ~ treatment, adjust = "tukey",
type = "response")
emmeans(modstep, pairwise ~ temp:dpi, adjust = "tukey",
type = "response")
source("dataCleaning_eyeScore.R")
unique(ti.mg$dpi)
ti.mg$dpi <- as.factor(ti.mg$dpi)
ti.mg$band_number <- as.factor(ti.mg$band_number)
View(ti.mg)
wibird <- ti.mg %>% group_by(band_number, treatment, temp, total_eye_score) %>%
summarize(n = n())
wibird
wibird <- wibird %>% na.omit(total_eye_score)
wibird
wibird <- wibird %>% group_by(band_number) %>% mutate(prop = n/sum(n)) %>%
ungroup()
wibird
wibird$propsq <- wibird$prop^2
wibirdVar <- wibird %>% group_by(band_number, treatment, temp) %>%
summarize(catVar = 1-sum(propsq))
wibirdVar
hist(wibirdVar$catVar) #weird bimodal distribution... ZI necessary
mod <- glmmTMB(catVar ~ temp, data = wibirdVar, family = quasibinomial())
mod <- glm(catVar ~ temp, data = wibirdVar, family = quasibinomial())
summary(mod)
simulateResiduals(mod, plot = T) #Assumptions check out
summary(mod)
car::Anova(mod, type = "III")
mod <- glmmTMB(res ~ temp*treatment*dpi + ar1(dpi + 0|band_number),
data = ti.pi,
family = Gamma())
mod <- glmmTMB(res ~ temp*treatment*dpi+
+ ar1(dpi + 1|band_number),
data = ti.pi,
family = Gamma())
mod <- glmmTMB(res ~ temp*treatment*dpi+
+ ar1(dpi + 0|band_number),
data = ti.pi,
family = Gamma())
mod <- glmmTMB(res ~ temp*treatment*dpi + (1|band_number),
data = ti.pi,
family = Gamma())
summary(mod)
# Add difference column
meanes <- mean(ti.mg$total_eye_score, na.rm = T)
medianes <- median(ti.mg$total_eye_score, na.rm = T)
medianes
meanes
ti.mg$res <- abs(ti.mg$total_eye_score-medianes)
hist(ti.mg$res)
ti.mg$res <- ti.mg$res +0.01
mod <- glmmTMB(res ~ temp+dpi + ar1(dpi + 0|band_number),
data = ti.mg,
family = Gamma(link = "inverse"))
mod <- glmmTMB(res ~ temp+dpi + ar1(dpi + 0|band_number),
data = ti.mg,
family = Gamma(link = "log"))
summary(mod)
car::Anova(mod, type = "III")
cld(emmeans(mod, pairwise ~ dpi, adjust = "tukey", type = "response"))
mod <- glmmTMB(res ~ temp+dpi + ar1(dpi + 0|band_number),
ziformula = .~ dpi,
data = ti.mg,
family = Gamma(link = "log"))
mod <- glmmTMB(res ~ temp+dpi + ar1(dpi + 0|band_number),
ziformula = ~dpi,
data = ti.mg,
family = Gamma(link = "log"))
summary(mod)
simulateResiduals(mod, plot = T)
mod <- glmmTMB(res ~ temp+dpi + ar1(dpi + 0|band_number),
data = ti.mg,
family = Gamma(link = "log"))
summary(mod)
diagnose(mod)
mod <- glmmTMB(res ~ temp+dpi + ar1(dpi + 0|band_number),
data = ti.mg,
family = Gamma(link = "log"))
simulateResiduals(mod, plot = T)
diagnose(mod)
summary(mod)
mod <- glmmTMB(res ~ temp+dpi + (1|band_number),
data = ti.mg,
family = Gamma(link = "log"))
simulateResiduals(mod, plot = T)
summary(mod)
car::Anova(mod, type = "III")
mod <- glmmTMB(res ~ temp+dpi + (1|band_number),
ziformula = ~dpi,
data = ti.mg,
family = Gamma(link = "log"))
simulateResiduals(mod, plot = T)
summary(mod)
mod <- glmmTMB(res ~ temp+dpi + (1|band_number),
ziformula = .,
data = ti.mg,
family = Gamma(link = "log"))
mod <- glmmTMB(res ~ temp+dpi + (1|band_number),
ziformula = ~ .,
data = ti.mg,
family = Gamma(link = "log"))
simulateResiduals(mod, plot = T)
car::Anova(mod, type = "III")
cld(emmeans(mod, pairwise ~ dpi, adjust = "tukey", type = "response"))
###### Fever
source("dataCleaning_fever.R")
# Simplify data set so pivot_wider works
ti.f <- ti.f %>% select(dpi, band_number, treatment, temp,
sex, fever_score)
unique(ti.mg$dpi)
wibird <- ti.f %>% pivot_wider(names_from = dpi,
names_glue = "{.value}_{dpi}",
values_from = fever_score)
library(CValternatives)
pvs <- c()
for (i in 1:nrow(wibird)){
vec <- c(wibird$`fever_score_0`[i], wibird$fever_score_3[i],
wibird$`fever_score_7`[i], wibird$fever_score_14[i],
wibird$`fever_score_18`[i], wibird$fever_score_24[i],
wibird$`fever_score_28`[i], wibird$fever_score_35[i])
pvs[i] <- PV(vec)
}
wibird$pv <- pvs
ggplot(wibird, aes(x = treatment, y = pv))+
geom_jitter()+
facet_wrap(~temp)
ggplot(wibird, aes(x = treatment, y = pv))+
geom_jitter()+
facet_wrap(~temp)
hist(wibird$pv)
mod <- glmmTMB(pv ~ temp + treatment, data = wibird, family = Gamma())
mod <- glmmTMB(pv ~ temp*treatment, data = wibird, family = Gamma())
summary(mod)
mod <- glmmTMB(pv ~ temp+treatment, data = wibird, family = Gamma())
summary(mod)
simulateResiduals(mod, plot = T) #Assumptions check out
car::Anova(mod, type = "III")
# Add difference column
meanfev <- mean(ti.f$fever_score, na.rm = T)
ti.f$res <- abs(ti.f$fever_score-meanfev)
hist(ti.f$res)
ti.f$dpi <- as.factor(ti.f$dpi)
mod <- glmer(res ~ temp*treatment*dpi + (1|band_number),
data = ti.f, family = Gamma())
mod <- glmmTMB(res ~ temp*treatment*dpi + (1|band_number),
data = ti.f, family = Gamma())
warnings()
hist(ti.f$res)
mod <- glmmTMB(res ~ temp*treatment*dpi + (1|band_number),
data = ti.f, family = gaussian())
hist(residuals(mod))
plot(residuals(mod), predict(mod))
car::Anova(mod, type = "III")
cld(emmeans(pairwise ~ temp:treatment:dpi, adjust = "tukey", type = "response"))
cld(emmeans(mod, pairwise ~ temp:treatment:dpi, adjust = "tukey", type = "response"))
hist(ti.mg$res)
ti.mg$res <- ti.mg$res -0.01
mod <- glmmTMB(res ~ temp+dpi + (1|band_number),
ziformula = ~ dpi,
data = ti.mg,
family = Gamma(link = "log"))
mod <- glmmTMB(res ~ temp+dpi + (1|band_number),
ziformula = ~ dpi,
data = ti.mg,
family = ziGamma(link = "log"))
summary(mod)
mod <- glmmTMB(res ~ temp+dpi + (1|band_number),
ziformula = ~ .,
data = ti.mg,
family = ziGamma(link = "log"))
summary(mod)
range(ti.mg$res)
range(ti.mg$res, na.rm =T)
ti.mg$res
ti.mg$res <- abs(ti.mg$total_eye_score-meanes)
hist(ti.mg$res)
range(ti.mg$res, na.rm =T)
mod <- glmmTMB(res ~ temp+dpi + (1|band_number),
ziformula = ~ dpi,
data = ti.mg,
family = ziGamma(link = "log"))
summary(mod)
simulateResiduals(mod, plot = T) #Pretty weird residuals - need to come back to this
mod <- glmmTMB(res ~ temp+dpi + (1|band_number),
ziformula = ~ .,
data = ti.mg,
family = ziGamma(link = "log"))
summary(mod)
mod <- glmmTMB(res ~ temp+dpi + (1|band_number),
ziformula = ~ 1,
data = ti.mg,
family = ziGamma(link = "log"))
summary(mod)
simulateResiduals(mod, plot = T) #Pretty weird residuals - need to come back to this
ti.mg$res <- ti.mg$res +0.001
mod <- glmmTMB(res ~ temp+dpi + (1|band_number),
data = ti.mg,
family = Gamma(link = "log"))
simulateResiduals(mod, plot = T) #Pretty weird residuals - need to come back to this
summary(mod)
range(ti.mg$res, na.rm =T)
ti.mg$res <- ti.mg$res -0.001
range(ti.mg$res, na.rm =T)
mod <- glmmTMB(res ~ temp+dpi + (1|band_number),
data = ti.mg,
family = Gamma(link = "inverse"))
hist(ti.mg$res)
mod <- glmmTMB(res ~ temp+dpi + (1|band_number),
data = ti.mg,
family = Gamma())
mod <- glmmTMB(res ~ temp+dpi,
data = ti.mg,
family = Gamma())
simulateResiduals(mod, plot = T) #Pretty weird residuals - need to come back to this
summary(mod)
cld(emmeans(mod, pairwise ~ dpi, adjust = "tukey", type = "response"))
mod <- glmmTMB(res ~ temp+dpi + (band_number),
data = ti.mg,
family = Gamma())
mod <- glmmTMB(res ~ temp+dpi + (1|band_number),
data = ti.mg,
family = Gamma())
mod <- glmmTMB(res ~ temp*dpi + (1|band_number),
data = ti.mg,
family = Gamma())
summary(mod)
car::Anova(mod, type = "III")
mod <- glmmTMB(res ~ temp+dpi + (1|band_number),
data = ti.mg,
family = Gamma())
