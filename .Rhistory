geom_histogram(binwidth = 0.001, fill = "white", color = "black")+
facet_wrap(~treatment)
lm1<-glm(elisa_od~treatment*temp*dpi, data=ti.pi, family=Gamma(link = "log"))
simulateResiduals(lm1, plot = T)
simulateResiduals(lm1, n = 1000, plot = T)
simulate(lm1)
hist(simulate(lm1))
hist(as.vector(simulate(lm1)))
simulateResiduals(lm1, n = 1000, plot = T)
hist(residuals(lm1))
lm1<-glm(elisa_od~treatment*temp*dpi, data=ti.pi, family=gaussian(link = "inverse"))
simulateResiduals(lm1, n = 1000, plot = T)
car::Anova(lm1, type = "III")
lm1<-glmer(elisa_od~treatment*temp*dpi, data=ti.pi,
family=Gamma(link = "log"))
lm1<-glmer(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "log"))
simulateResiduals(lm1, n = 1000, plot = T)
simulateResiduals(lm1, n = 1000, plot = T, re.form = F)
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "log"))
simulateResiduals(lm1, n = 1000, plot = T, re.form = F)
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=gaussian(link = "inverse"))
simulateResiduals(lm1, n = 1000, plot = T, re.form = F)
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=gamma(link = "inverse"))
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "inverse"))
simulateResiduals(lm1, n = 1000, plot = T, re.form = F)
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "log"))
simulateResiduals(lm1, n = 1000, plot = T, re.form = F)
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=gaussian(link = "log"))
simulateResiduals(lm1, n = 1000, plot = T, re.form = F)
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=gaussian(link = "log"))
simulateResiduals(lm1, n = 1000, plot = T, re.form = F)
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "log"))
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "log"))
simulateResiduals(lm1, n = 1000, plot = T, re.form = F)
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=gaussian(link = "identity"))
simulateResiduals(lm1, n = 1000, plot = T, re.form = F)
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "identity"))
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "log"))
simulateResiduals(lm1, n = 1000, plot = T, re.form = F)
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "loglog"))
?glmmTMB
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=gaussian(link = "cloglog"))
simulateResiduals(lm1, n = 1000, plot = T, re.form = F)
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "cloglog"))
simulateResiduals(lm1, n = 1000, plot = T, re.form = F)
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "log"))
simulateResiduals(lm1, n = 1000, plot = T, re.form = F)
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "inverse"))
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "log"))
hist(residuals(lm1))
residuals(lm1)
simulationOutput <-simulateResiduals(lm1, n = 1000, plot = T, re.form = F)
testCategorical(simulationOutput)
testCategorical(simulationOutput, catPred = temp)
testCategorical(simulationOutput, catPred = "temp")
?testCategorical
testCategorical(simulationOutput, catPred = ti.pi$temp)
testCategorical(simulationOutput, catPred = ti.pi$temp)
plotResiduals(simulationOutput, ti.pi$temp)
plotResiduals(simulationOutput, na.omit(ti.pi$temp))
simulationOutput <-simulateResiduals(lm1)
plotResiduals(simulationOutput, ti.pi$temp)
simulationOutput <-simulateResiduals(lm1, plot = T)
summary(lm1)
lm1<-glmmTMB(elisa_od~treatment*temp*dpi, data=ti.pi,
family=Gamma(link = "log"))
simulationOutput <-simulateResiduals(lm1, plot = T)
lm1<-glmmTMB(elisa_od~treatment*temp*dpi, data=ti.pi,
family=Gamma(link = "inverse"))
simulationOutput <-simulateResiduals(lm1, plot = T)
lm1<-glmmTMB(elisa_od~treatment*temp*dpi, data=ti.pi,
family=Gamma(link = "log"))
car::Anova(lm1, type = "III")
ggplot(data = ti.pi, aes(x = elisa_od))+
geom_histogram(binwidth = 0.001, fill = "white", color = "black")+
facet_wrap(~treatment)
ggplot(data = ti.pi, aes(x = treatment, y = elisa_od))+
geom_boxplot()+
geom_jitter(width = 0.1)
ggplot(data = ti.pi, aes(x = dpi, y = elisa_od))+
geom_boxplot()+
geom_jitter(width = 0.1)
ggplot(data = ti.pi, aes(x = dpi, y = elisa_od, color = treatmetn))+
geom_boxplot()+
geom_jitter(width = 0.1)
ggplot(data = ti.pi, aes(x = dpi, y = elisa_od, color = treatment))+
geom_boxplot()+
geom_jitter(width = 0.1)
ggplot(data = ti.pi, aes(x = dpi, y = elisa_od, color = treatment))+
geom_boxplot()+
geom_jitter(width = 0.1)+
facet_wrap(~temp)
lm1<-glmmTMB(elisa_od~treatment*temp*dpi, data=ti.pi,
family=Gamma(link = "log"))
lm1<-glmmTMB(elisa_od~treatment+temp+dpi, data=ti.pi,
family=Gamma(link = "log"))
simulationOutput <-simulateResiduals(lm1, plot = T)
lm1<-glmmTMB(elisa_od~treatment+temp+dpi +
treatment:temp + treatment:dpi+
temp:dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "log"))
summary(lm1)
simulationOutput <-simulateResiduals(lm1, plot = T)
lm1<-glmmTMB(elisa_od~treatment+temp+dpi +
treatment:temp + treatment:dpi+
temp:dpi, data=ti.pi,
family=Gamma(link = "log"))
simulationOutput <-simulateResiduals(lm1, plot = T)
car::Anova(lm1, type = "III")
lm1<-glmmTMB(elisa_od~treatment+temp+dpi+ treatment:dpi+
temp:dpi, data=ti.pi,
family=Gamma(link = "log"))
simulationOutput <-simulateResiduals(lm1, plot = T)
car::Anova(lm1, type = "III")
lm1<-glmmTMB(elisa_od~treatment+temp+dpi+ treatment:dpi, data=ti.pi,
family=Gamma(link = "log"))
simulationOutput <-simulateResiduals(lm1, plot = T)
summary(lm1)
car::Anova(lm1, type = "III")
lm1<-glmmTMB(elisa_od~treatment+temp+dpi, data=ti.pi,
family=Gamma(link = "log"))
car::Anova(lm1, type = "III")
lm1<-glm(elisa_od~treatment+temp+dpi, data=ti.pi,
family=Gamma(link = "log"))
simulationOutput <-simulateResiduals(lm1, plot = T)
lm1<-glm(elisa_od~treatment+temp+dpi, data=ti.pi,
family=Gamma(link = "inverse"))
simulationOutput <-simulateResiduals(lm1, plot = T)
lm1<-glm(elisa_od~treatment+temp+dpi, data=ti.pi,
family=Gamma(link = "log"))
simulationOutput <-simulateResiduals(lm1, plot = T)
hist(residuals(lm1))
plot(residuals(lm1), predict(lm1))
plot(residuals(lm1), predict(lm1, type = "response"))
simulationOutput <-simulateResiduals(lm1, plot = T)
car::Anova(lm1, type = "III")
lm1<-glm(elisa_od~treatment+temp+dpi + dpi:treatment, data=ti.pi,
family=Gamma(link = "log"))
car::Anova(lm1, type = "III")
lm1<-glm(elisa_od~treatment+temp+dpi + dpi:treatment +
dpi:temp + temp:treatment, data=ti.pi,
family=Gamma(link = "log"))
simulationOutput <-simulateResiduals(lm1, plot = T)
car::Anova(lm1, type = "III")
lm1<-glm(elisa_od~treatment+temp+dpi + dpi:treatment +
dpi:temp, data=ti.pi,
family=Gamma(link = "log"))
car::Anova(lm1, type = "III")
lm1<-glm(elisa_od~treatment+temp+dpi + dpi:treatment, data=ti.pi,
family=Gamma(link = "log"))
car::Anova(lm1, type = "III")
lm1<-glm(elisa_od~treatment+temp+dpi, data=ti.pi,
family=Gamma(link = "log"))
car::Anova(lm1, type = "III")
lm1<-glmmTMB(elisa_od~treatment+temp+dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "log"))
car::Anova(lm1, type = "III")
lm1<-glmmTMB(elisa_od~treatment*temp*dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "log"))
simulationOutput <-simulateResiduals(lm1, plot = T)
car::Anova(lm1, type = "III")
lm1<-glmmTMB(elisa_od~treatment+temp+dpi +
treatment:temp + treatment:dpi +
temp:dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "log"))
car::Anova(lm1, type = "III")
lm1<-glmmTMB(elisa_od~treatment+temp+dpi + treatment:dpi +
temp:dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "log"))
car::Anova(lm1, type = "III")
lm1<-glmmTMB(elisa_od~treatment+temp+dpi + treatment:dpi + (1|band_number), data=ti.pi,
family=Gamma(link = "log"))
car::Anova(lm1, type = "III")
emmeans(lm1, pairwise ~ treatment:dpi, adjust = "tukey")
library(emmeans)
emmeans(lm1, pairwise ~ treatment:dpi, adjust = "tukey")
library(multcomp)
cld(emmeans(lm1, pairwise ~ treatment:dpi, adjust = "tukey"))
cld(emmeans(lm1, pairwise ~ treatment:dpi:temp, adjust = "tukey"))
lm1<-glmmTMB(elisa_od~treatment*temp*dpi+
(1|band_number), data=ti.pi,
family=Gamma(link = "log"))
cld(emmeans(lm1, pairwise ~ treatment:dpi:temp, adjust = "tukey"))
car::Anova(lm1, type = "III")
summary(lm1)
lm1<-glmmTMB(elisa_od~treatment+temp+dpi + treatment:dpi +
(1|band_number), data=ti.pi,
family=Gamma(link = "inverse"))
BIC(lm1)
lm1<-glmmTMB(elisa_od~treatment+temp+dpi + treatment:dpi +
(1|band_number), data=ti.pi,
family=Gamma(link = "log"))
BIC(lm1)
lm1<-glmmTMB(elisa_od~treatment+temp+dpi + treatment:dpi +
(1|band_number), data=ti.pi,
family=gaussian(link = "log"))
BIC(lm1)
lm1<-glmmTMB(elisa_od~treatment+temp+dpi + treatment:dpi +
(1|band_number), data=ti.pi,
family=Gamma(link = "inverse"))
cld(emmeans(lm1, pairwise ~ treatment:dpi:temp, adjust = "tukey"))
cld(emmeans(lm1, pairwise ~ treatment:dpi:temp, type = "response",
adjust = "tukey"))
means <- as.data.frame(cld(emmeans(lm1, pairwise ~ treatment:dpi:temp, type = "response",
adjust = "tukey")))
geom_crossbar(aes(ymin = asymp.LCL, ymax = asymp.UCL, color = treatment))+
facet_wrap(~temp)
ggplot(means, aes(x = dpi, y = response))+
geom_point(data = ti.pi, aes(x = dpi, y = elisa_od, color = treatment))+
geom_crossbar(aes(ymin = asymp.LCL, ymax = asymp.UCL, color = treatment))+
facet_wrap(~temp)
ggplot(means, aes(x = dpi, y = response))+
geom_point(data = ti.pi, aes(x = dpi, y = elisa_od, color = treatment))+
geom_crossbar(aes(ymin = asymp.LCL, ymax = asymp.UCL, color = treatment))+
facet_wrap(~temp)+
theme_bw()
means <- as.data.frame(cld(emmeans(lm1, pairwise ~ treatment:dpi, type = "response",
adjust = "tukey")))
ggplot(means, aes(x = dpi, y = response))+
geom_point(data = ti.pi, aes(x = dpi, y = elisa_od, color = treatment))+
geom_crossbar(aes(ymin = asymp.LCL, ymax = asymp.UCL, color = treatment))+
facet_wrap(~temp)+
theme_bw()
ggplot(means, aes(x = dpi, y = response))+
geom_crossbar(aes(ymin = asymp.LCL, ymax = asymp.UCL, color = treatment))+
geom_jitter(data = ti.pi, aes(x = dpi, y = elisa_od, color = treatment),
width = 0.1, alpha = 0.5)+
facet_wrap(~temp)+
theme_bw()
ggplot(means, aes(x = dpi, y = response))+
geom_crossbar(aes(ymin = asymp.LCL, ymax = asymp.UCL, fill = treatment),
alpha = 0.5)+
geom_jitter(data = ti.pi, aes(x = dpi, y = elisa_od, color = treatment),
width = 0.1, alpha = 0.5)+
facet_wrap(~temp)+
theme_bw()
ggplot(means, aes(x = dpi, y = response))+
geom_crossbar(aes(ymin = asymp.LCL, ymax = asymp.UCL, fill = treatment),
alpha = 0.5)+
geom_jitter(data = ti.pi, aes(x = dpi, y = elisa_od, color = treatment),
width = 0.1)+
facet_wrap(~temp)+
theme_bw()
lm1<-glmmTMB(elisa_od~treatment+temp+dpi + treatment:dpi +
(1|band_number), data=ti.pi,
family=Gamma(link = "inverse"))
simulationOutput <-simulateResiduals(lm1, plot = T)
lm1<-glmmTMB(elisa_od~treatment+temp+dpi + treatment:dpi +
(1|band_number), data=ti.pi,
family=gaussian(link = "log"))
simulationOutput <-simulateResiduals(lm1, plot = T)
lm1<-glmmTMB(elisa_od~treatment+temp+dpi + treatment:dpi +
(1|band_number), data=ti.pi,
family=gaussian(link = "identity"))
simulationOutput <-simulateResiduals(lm1, plot = T)
lm1<-glm(elisa_od~treatment+temp+dpi + treatment:dpi,
data=ti.pi,
family=Gamma(link = "inverse"))
simulationOutput <-simulateResiduals(lm1, plot = T)
?t.test
library(ggplot2)
library(tidyverse)
library(lme4)
library(effects)
library(AICcmodavg)
library(DHARMa)
library(emmeans)
ti <- read.csv("ti_merged_data.csv")
#select only phagocytosis assay and make new wbc total, phago total, and phago score columns
ti <- ti %>%
filter(Well.1.WBC != "NA") %>% #select only phagocytosis assay
mutate(wbc_total=Well.1.WBC+Well.2.WBC+Well.3.WBC+Well.4.WBC)%>% #sum of wbc quadruplicates
mutate(phago_total=Well.1.Phago+Well.2.Phago+Well.3.Phago+Well.4.Phago) %>% #sum of phago quadruplicates
mutate(phago_score = phago_total/(wbc_total+phago_total)) #phago score = phagocytic / total
ti <- ti%>%
filter(dpi != 2) %>% #remove dpi 2 because only a small subset were run day 2
drop_na(phago_score)
glm1 <- glmer(phago_score~temp+treatment + (1|band_number), weights=wbc_total+phago_total, data=ti, family="binomial")
summary(glm1)
means <- as.data.frame(cld(emmeans(glm1, pairwise ~ treatment, adjust = "tukey")))
library(multcomp)
means <- as.data.frame(cld(emmeans(glm1, pairwise ~ treatment, adjust = "tukey")))
means
ggplot(means, aes(x = treatment, y = emmean, color = temp))+
geom_crossbar(aes(ymin = asymp.LCL, ymax = asymp.UCL)))+
ggplot(means, aes(x = treatment, y = emmean, color = temp))+
geom_crossbar(aes(ymin = asymp.LCL, ymax = asymp.UCL))+
geom_point()
ggplot(means, aes(x = treatment, y = emmean))+
geom_crossbar(aes(ymin = asymp.LCL, ymax = asymp.UCL))+
geom_point()
means <- as.data.frame(cld(emmeans(glm1, pairwise ~ treatment,
type = "response", adjust = "tukey")))
ggplot(means, aes(x = treatment, y = emmean))+
geom_crossbar(aes(ymin = asymp.LCL, ymax = asymp.UCL))+
geom_jitter(data = ti, aes(x = treatment, y = phago_score))
means <- as.data.frame(cld(emmeans(glm1, pairwise ~ treatment,
type = "response", adjust = "tukey")))
ggplot(means, aes(x = treatment, y = response))+
geom_crossbar(aes(ymin = asymp.LCL, ymax = asymp.UCL))+
geom_jitter(data = ti, aes(x = treatment, y = phago_score))
means
ggplot(means, aes(x = treatment, y = prob))+
geom_crossbar(aes(ymin = asymp.LCL, ymax = asymp.UCL))+
geom_jitter(data = ti, aes(x = treatment, y = phago_score))
ggplot(means, aes(x = treatment, y = prob))+
geom_crossbar(aes(ymin = asymp.LCL, ymax = asymp.UCL))+
geom_jitter(data = ti, aes(x = treatment, y = phago_score, color = temp),
width = 0.1, alpha = 0.5)+
theme_bw()
source("dataCleaning.R")
source("dataCleaning.R")
source("dataCleaning.R")
source("dataCleaning.R")
## Only days 9 and 28
ti.pi <- ti %>%
filter(dpi > 0)
unique(ti.pi$dpi)
ti.pi$dpi <- as.factor(ti.pi$dpi)
library(emmeans)
library(multcomp)
library(ggplot2)
library(tidyverse)
library(lme4)
library(glmmTMB)
library(effects)
library(AICcmodavg)
library(DHARMa)
library(optimx)
source("dataCleaning_antibody.R")
unique(ti.pi$dpi)
ti.pi$dpi <- as.factor(ti.pi$dpi)
lm1<-glm(elisa_od~treatment+temp+dpi + treatment:dpi,
data=ti.pi,
family=Gamma(link = "inverse"))
simulationOutput <-simulateResiduals(lm1, plot = T)
car::Anova(lm1, type = "III")
summary(lm1)
means <- as.data.frame(cld(emmeans(lm1, pairwise ~ treatment:dpi, type = "response",
adjust = "tukey")))
ggplot(means, aes(x = dpi, y = response))+
geom_crossbar(aes(ymin = asymp.LCL, ymax = asymp.UCL, fill = treatment),
alpha = 0.5)+
geom_jitter(data = ti.pi, aes(x = dpi, y = elisa_od, color = treatment),
width = 0.1)+
facet_wrap(~temp)+
theme_bw()
means
ggplot(means, aes(x = dpi, y = response))+
geom_crossbar(aes(ymin = lower.CL, ymax = upper.CL, fill = treatment),
alpha = 0.5)+
geom_jitter(data = ti.pi, aes(x = dpi, y = elisa_od, color = treatment),
width = 0.1)+
facet_wrap(~temp)+
theme_bw()
source("dataCleaning_fever.R")
ti.f$dpi <- as.factor(ti.f$dpi)
lm2 <- lmer(fever_change ~ temp*treatment*dpi + (1|band_number),data=ti.f)
hist(residuals(lm2))
plot(residuals(lm2), predict(lm1))
car::Anova(lm2, type = "III")
plot(residuals(lm2), predict(lm1))
plot(residuals(lm2), predict(lm2))
car::Anova(lm2, type = "III")
### stepwise selection:
car::Anova(lm2, type = "III")
lm2 <- lmer(fever_change ~ temp + treatment + dpi +
treatment:dpi + temp:dpi +
temp:treatment + (1|band_number),data=ti.f)
car::Anova(lm2, type = "III")
means <- as.data.frame(cld(emmeans(lm2, pairwise ~ dpi:treatment, adjust = "tukey")))
ggplot(means, aes(x = dpi, y = emmean, color = treatment))+
geom_line(aes(group = treatment))+
geom_point()
means2 <- as.data.frame(cld(emmeans(lm2, pairwise ~ dpi:temp, adjust = "tukey")))
ggplot(means2, aes(x = dpi, y = emmean, color = temp))+
geom_line(aes(group = temp))+
geom_point()
means <- as.data.frame(cld(emmeans(lm2, pairwise ~ dpi:treatment, adjust = "tukey")))
ggplot(means, aes(x = dpi, y = emmean, color = treatment))+
geom_line(aes(group = treatment))+
geom_point()
means2 <- as.data.frame(cld(emmeans(lm2, pairwise ~ dpi:temp, adjust = "tukey")))
ggplot(means2, aes(x = dpi, y = emmean, color = temp))+
geom_line(aes(group = temp))+
geom_point()
ti.f$pred <- predict(lm2)
ti.fMeans <- ti.f %>% group_by(dpi, treatment, temp) %>%
summarize(meanFevCh = mean(pred))
ggplot(ti.fMeans, aes(x = dpi, y = meanFevCh))+
geom_line(aes(group = treatment, color = treatment),
linewidth = 1.2)+
geom_point(aes(color = treatment), size = 3)+
geom_jitter(data = ti.f, aes(x = dpi, y = fever_change, color = treatment),
alpha = 0.2,
width = 0.1)+
theme_bw()+
facet_wrap(~temp)
source("dataCleaning_phago.R")
glm1 <- glmer(phago_score~temp+treatment + (1|band_number),
weights=wbc_total+phago_total,
data=ti, family="binomial")
simulateResiduals(glm1, plot = T)
summary(glm1)
means <- as.data.frame(cld(emmeans(glm1, pairwise ~ treatment,
type = "response", adjust = "tukey")))
ggplot(means, aes(x = treatment, y = prob))+
geom_crossbar(aes(ymin = asymp.LCL, ymax = asymp.UCL))+
geom_jitter(data = ti, aes(x = treatment, y = phago_score, color = temp),
width = 0.1, alpha = 0.5)+
theme_bw()
source("dataCleaning_eyeScore.R")
lm1 <- glmer(tes ~ temp*dpi + (1|band_number),
data=ti.mg.mod,
family = poisson,
control = glmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
str(ti.mg.mod)
ti.mg.mod$band_number <- as.factor(ti.mg.mod$band_number)
lm1 <- glmer(tes ~ temp*dpi + (1|band_number),
data=ti.mg.mod,
family = poisson,
control = glmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
source("dataCleaning_eyeScore.R")
ti.mg.mod$band_number <- as.factor(ti.mg.mod$band_number)
lm1 <- glmer(tes ~ temp*dpi + (1|band_number),
data=ti.mg.mod,
family = poisson,
control = glmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
AF1 <- allFit(lm1, verbose=F)
str(ti.mg.mod$band_number)
View(ti.mg.mod)
ti <- read.csv("ti_merged_data.csv")
#Add column for total eye score by adding l and r eye score
ti <- ti %>%
group_by(bird_ID) %>%
mutate(total_eye_score=(l_eye_score+r_eye_score))
#make total eye score an integer by multiplying by two for models
ti$tes <- ti$total_eye_score*2
#data frame with only inoculated birds
ti.mg <- ti%>%
filter(treatment == "Infected")
hist(ti.mg$total_eye_score)
hist(ti$total_eye_score)
hist(ti.mg$tes)
ti.mg$sympt_cutoff = 0.1
ti.mg <- ti.mg %>%
mutate(diseased= ifelse(total_eye_score>sympt_cutoff, 1, 0))
#new column with whether the bird is ever diseased
ti.mg <- ti.mg %>%
group_by(band_number) %>%
mutate(ever_diseased = ifelse(any(coalesce(diseased, 0) == 1), 1, 0)) %>%
ungroup()
ti.mg<- na.omit(ti.mg)
ti.mg$dpi <- as.factor(ti.mg$dpi)
ti.mg.mod <- ti.mg %>% filter(dpi != "-12" & dpi != "3"& dpi != "35")
View(ti.mg.mod)
View(ti.mg)
source("dataCleaning_eyeScore.R")
ti.mg.mod$band_number <- as.factor(ti.mg.mod$band_number)
lm1 <- glmer(tes ~ temp*dpi + (1|band_number),
data=ti.mg.mod,
family = poisson,
control = glmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
AF1 <- allFit(lm1, verbose=F)
AF1_lliks <- sort(sapply(AF1,logLik))
bind_rows(AF1_lliks) %>%
remove_rownames(.) %>%
mutate(model = c("NB Mixed Effects Model")) %>%
select(model, everything()) %>%
group_by(model) %>%
gather(., Optimizer, llik, 2:ncol(.)) %>%
ggplot(.,aes(Optimizer, llik)) + geom_point() +
facet_wrap(~model) + coord_flip() +
ylab("Log-Likelihood") +
labs(title = "The Log-Likelihoods of Seven Different Optimizers in Our Model")
simulateResiduals(lm1, plot = T)
car::Anova(lm1, type = "III")
summary(lm1)
means <- cld(emmeans(lm1, pairwise ~ dpi*temp, adjust = "tukey", type = "response"))
ggplot(means, aes(x = dpi, y = rate, color = temp))+
geom_jitter(data = ti.mg, aes(x = dpi, y = tes),
width = 0.1, alpha = 0.5)+
geom_line(aes(group = temp), linewidth = 1.2)+
geom_point(size = 3)+
theme_bw()
means
ggplot(means, aes(x = dpi, y = rate, color = temp))+
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
width = 0.1)+
geom_line(aes(group = temp), linewidth = 1.2)+
geom_point(size = 3)+
theme_bw()+
facet_wrap(~temp)
